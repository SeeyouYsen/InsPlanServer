# Kubernetes 部署配置

apiVersion: v1
kind: Namespace
metadata:
  name: insplan

---
# ConfigMap for environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: insplan-config
  namespace: insplan
data:
  DATABASE_HOST: "postgres-service"
  DATABASE_PORT: "5432"
  DATABASE_USERNAME: "postgres"
  DATABASE_NAME: "insplan_db"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  JWT_SECRET: "your-production-secret-key"

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: insplan-secrets
  namespace: insplan
type: Opaque
data:
  DATABASE_PASSWORD: cGFzc3dvcmQ= # base64 encoded "password"

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: insplan
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: insplan-secrets
              key: DATABASE_PASSWORD
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: insplan
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
# PostgreSQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: insplan
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: insplan
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: insplan
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: insplan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: insplan/api-gateway:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: insplan-config
        - secretRef:
            name: insplan-secrets
        env:
        - name: PORT
          value: "8080"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: insplan
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer

---
# User Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: insplan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: insplan/user-service:latest
        ports:
        - containerPort: 8081
        envFrom:
        - configMapRef:
            name: insplan-config
        - secretRef:
            name: insplan-secrets
        env:
        - name: PORT
          value: "8081"
        - name: SERVICE_HOST
          value: "user-service"
        - name: SERVICE_PORT
          value: "8081"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5

---
# User Service Service
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: insplan
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081

---
# Plan Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plan-service
  namespace: insplan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: plan-service
  template:
    metadata:
      labels:
        app: plan-service
    spec:
      containers:
      - name: plan-service
        image: insplan/plan-service:latest
        ports:
        - containerPort: 8082
        envFrom:
        - configMapRef:
            name: insplan-config
        - secretRef:
            name: insplan-secrets
        env:
        - name: PORT
          value: "8082"
        - name: SERVICE_HOST
          value: "plan-service"
        - name: SERVICE_PORT
          value: "8082"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Plan Service Service
apiVersion: v1
kind: Service
metadata:
  name: plan-service
  namespace: insplan
spec:
  selector:
    app: plan-service
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082

---
# Payment Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: insplan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
      - name: payment-service
        image: insplan/payment-service:latest
        ports:
        - containerPort: 8003
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_PORT
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_USERNAME
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: insplan-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_NAME
          value: "payment_service"
        - name: PORT
          value: "8003"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# Payment Service Service
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: insplan
spec:
  selector:
    app: payment-service
  ports:
  - protocol: TCP
    port: 8003
    targetPort: 8003
  type: ClusterIP

---
# Notification Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: insplan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: insplan/notification-service:latest
        ports:
        - containerPort: 8004
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_PORT
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: DATABASE_USERNAME
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: insplan-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_NAME
          value: "notification_service"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: insplan-config
              key: REDIS_PORT
        - name: PORT
          value: "8004"
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# Notification Service Service
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: insplan
spec:
  selector:
    app: notification-service
  ports:
  - protocol: TCP
    port: 8004
    targetPort: 8004
  type: ClusterIP

---
# Horizontal Pod Autoscaler for API Gateway
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: insplan
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Horizontal Pod Autoscaler for User Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
  namespace: insplan
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Horizontal Pod Autoscaler for Plan Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: plan-service-hpa
  namespace: insplan
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: plan-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Horizontal Pod Autoscaler for Payment Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: payment-service-hpa
  namespace: insplan
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Horizontal Pod Autoscaler for Notification Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: notification-service-hpa
  namespace: insplan
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: notification-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
